@{
    ViewBag.Title = "Satış Siparişleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/shipment.css" rel="stylesheet" />
<style>
    .fa-spin {
        margin-top: 0px;
    }
</style>

<div id="jCrumbs" class="breadCrumb module">
    <ul>
        <li>
            <a href="/">
                <i class="glyphicon glyphicon-home"></i>
            </a>
        </li>
        <li style="background: none;">
            <span style="width: 40px;"><a href="#" style="width: 83px;">Rapor</a></span>
            <div class="chevronOverlay" style="display: block;"></div>
        </li>
        <li>
            Siparişlerim
        </li>
    </ul>
</div>

<div class="col-sm-12 col-md-12 border-filter">
    <div class="col-sm-6">
        <form>
            <div class="form-group row">
                <label class="col-sm-1 col-form-label" style="padding-left: 8px;">Sipariş Durumu</label>
                <div class="col-sm-3">
                    <select id="drpOrderState" class="form-control js-example-basic-single" style="width:100%;">
                        <option value="ACIK">ACIK</option>
                        <option value="KAPALI">KAPALI</option>
                        <option value="TUMU">TUMU</option>
                    </select>
                </div>

                <div class="col-sm-1">
                    <a id="btn-execute" class="btn btn-default form-control icon-text-button hint--top hint--rounded"
                       data-hint="Yürüt">
                        <img src="~/img/realtime.png" />
                    </a>
                </div>

                <div class="col-sm-1 padding-left-0">
                    <a id="download-xlsx"
                       class="btn btn-default form-control icon-text-button hint--top hint--rounded"
                       data-hint="Excele Aktar"
                       href="#">
                        <img src="~/img/microsoft_excel.png" />
                    </a>
                </div>
            </div>
        </form>
    </div>

    <div class="col-sm-4 col-md-4 float-right">
        <div class="vcard">
            <ul>
                <li class="v-heading">
                    <span id="customerName" style="font-weight: 700;font-size: 13px;color: #222222;">
                    </span>
                </li>
                <li>
                    <ul class="sepH_b item-list list-unstyled">
                        <li>
                            <span id="txt_total_m3">Sevke Hazır (M3) : </span>
                            <span id="txt_m3_value"></span>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="col-sm-12 col-md-12 padding-left-0 padding-right-0 margin-top-5">
    <table class="table table-striped table-bordered display nowrap" id="tblSaleRows" style="width:100%">
        <thead>
            <tr>
                <th></th>
                <th>SD</th>
                <th>Muh.Onayı</th>
                <th>Sipariş Tarihi</th>
                <th>Teslim Tarihi</th>
                <th>Sipariş No</th>
                <th>Kalem</th>
                <th>Müşteri</th>
                <th>Malzeme</th>
                <th>Tanım</th>
                <th>Miktar</th>
                <th>Teslim Edildi</th>
                <th>Açık Teslimat</th>
                <th>Sevke Hazır</th>
                <th>Hazır Hacim (M3)</th>
                <th>Üretimde</th>
                <th>Hafta</th>
                <th>Tutar (TL)</th>
                <th>Cari</th>
                <th>Uzun Tanım</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<div id="freezeOverlay"></div>

@section Scripts{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script>
        $(function () {
            $('.js-example-basic-single').select2();
            $("#download-xlsx").prop("disabled", true)
                .addClass("disabled-link");
            $("#txt_m3_value").text('');

            var customer = JSON.parse(sessionStorage.getItem("Customer"));
            console.log(customer);
            $("#customerName").text(customer.Name)

            var table = $('#tblSaleRows').DataTable({
                language: {
                    url: "@Url.Content("~/Content/tr.json")",
                    processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>',
                    loadingRecords: ""
                },
                processing: true,
                scrollX: true,
                fixedHeader: true,
                autoWidth: false,
                responsive: true,
                retrieve: true,
                displayLength: 17,
                pagingType: 'full_numbers',
                ajax:
                {
                    url: '@Url.Action("GetData")',
                    type: "POST",
                    dataType: 'json',
                    data: function (d) {
                        var customer = JSON.parse(sessionStorage.getItem("Customer"));
                        d.iv_kunnr = customer.SapCode;
                        d.iv_cmpt_abgru = $("#drpOrderState").val()
                    },
                    dataSrc: function (json) {
                        var totalM3 = json.data
                            .filter(function (item) {
                                return item.CMPT_ABGRU === "ACIK";
                            })
                            .reduce(function (sum, item) {
                                return sum + item.CMPT_READY_VOLUM; // Replace "volume" with the property you want to sum
                            }, 0);

                        $("#txt_m3_value").text(new Intl.NumberFormat('tr-TR',
                                                { minimumFractionDigits: 2, maximumFractionDigits: 2 })
                                          .format(totalM3));

                        return json.data;
                    }
                },
                columns: [
                    {
                        render: function (data, type, row) {
                            if (row.CMPT_ABGRU == "ACIK") {
                                return `<i class="splashy-information"></i>`;
                            }
                            else {
                                return `<i class="splashy-check"></i>`;
                            }
                        }
                    },
                    { data: 'CMPT_ABGRU' },
                    { data: 'CMPT_ORDER_MUH_ONAY',visible:false },
                    {//order date
                        data: 'CMPT_AUDAT_DATE',
                        render: function (data, type, row) {
                            if (type === 'display' || type === 'filter') {
                                var timestamp = parseInt(data.match(/\d+/)[0], 10);
                                var date = new Date(timestamp);
                                var formattedDate = date.toLocaleDateString('tr-TR');
                                return formattedDate;
                            }
                            return data;
                        }
                    },
                    { //teslim tarih
                        data: 'CMPT_DELIV_DATE',
                        render: function (data, type, row) {
                            if (type === 'display' || type === 'filter') {
                                var timestamp = parseInt(data.match(/\d+/)[0], 10);
                                var date = new Date(timestamp);
                                var formattedDate = date.toLocaleDateString('tr-TR');
                                return formattedDate;
                            }
                            return data;
                        }
                    },
                    { data: 'CMPT_VBELN' },
                    { data: 'CMPT_POSNR' },
                    { data: 'ZZMUSTERI_AD' },
                    { data: 'MATNR' },
                    { data: 'MAKTX' },
                    {
                        data: 'CMPT_KWMENG', width: "30px",
                        render: function (data, type, row) {
                            if (type === 'display') {
                                return new Intl.NumberFormat('tr-TR', { minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(data);
                            }
                            return data;
                        }
                    },
                    { data: 'CMPT_TOTAL_LFIMG' },       //teslim mkt
                    { data: 'CMPT_TOTAL_OPEN_LFIMG' },  //açık tslmt mkt
                    { data: 'CMPT_TOTAL_BMENG' },      //sevke hazır
                    {
                        data: 'CMPT_READY_VOLUM',
                        render: function (data, type, row) {
                            if (type === 'display') {
                                return new Intl.NumberFormat('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(data);
                            }
                            return data;
                        }
                    },
                    { data: 'CMPT_TOTAL_IN_PRODUCTION'},
                    { data: 'ZZURTM_WEEK_DESC' },
                    {
                        data: 'CMPT_TOTAL_ORDER_PRICE',visible:false,
                        render: function (data, type, row) {
                            if (type === 'display') {
                                return new Intl.NumberFormat('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(data);
                            }
                            return data;
                        },
                        width:"100px"
                    },
                    { data: 'KUNAGTANIM' },
                    { data: 'LONG_MAKTX' }
                 ],
                columnDefs: [
                    { className: 'dt-center', targets: [0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14,15]},
                    { className: 'dt-right', targets: [9,16,17] }
                ],
                initComplete: function (settings, json) {
                    $("#download-xlsx").prop("disabled", false);
                }
            }).on('xhr', function (e, settings, json, xhr) {
                $('#freezeOverlay').hide();
                $("#download-xlsx").prop("disabled", false)
                                   .removeClass("disabled-link");
            });

            setTimeout(function () {
                var customer = JSON.parse(sessionStorage.getItem("Customer"));
                if (customer.RoleID == 2) {
                    table.column(17).visible(true);
                }
            }, 200);

            $("#drpOrderState").on('change', function (e) {
                const selectedValue = $(this).val();
                table.clear().draw();

                disableElements();
                table.ajax.reload(null, false);
            });

            $("#btn-execute").click(function () {
                var customer = JSON.parse(sessionStorage.getItem("Customer"));
                $("#customerName").text(customer.Name)

                table.clear().draw();
                disableElements();
                table.ajax.reload(null, false);
            });

            $('#download-xlsx').click(function () {
                var count = table.data().count();
                if (count > 0) {
                    var filename = $("#drpOrderState").val() + '_SIPARISLER.xlsx';
                    exportTableToExcel('tblSaleRows', filename);
                }
            });

            var headers;
            function exportTableToExcel(tableID, filename) {
                headers = ['CMPT_ABGRU','CMPT_AUDAT', 'CMPT_DELIV_DATE', 'CMPT_VBELN', 'CMPT_POSNR', 'ZZMUSTERI_AD',
                    'MATNR', 'MAKTX', 'CMPT_KWMENG', 'CMPT_TOTAL_FKIMG', 'CMPT_TOTAL_LFIMG', 'CMPT_TOTAL_BMENG',
                    'CMPT_READY_VOLUM', 'CMPT_TOTAL_IN_PRODUCTION', 'ZZURTM_WEEK_DESC',
                    'KUNAGTANIM', 'LONG_MAKTX'];

                var exportTable = $('<table>');
                var thead = $('<thead>');
                var tbody = $('<tbody>');

                $('#tblSaleRows thead tr')
                    .clone()
                    .each(function () {
                        $(this).find('th:first-child').remove();
                        $(this).find('th:nth-child(2)').remove();
                    })
                    .appendTo(thead);
                thead.appendTo(exportTable);

                var data = table.rows(':not(.no-data)').data().toArray();
                data.forEach(function (row) {
                    var tr = $('<tr>');
                    headers.forEach(function (header) {
                        if (header == "CMPT_AUDAT_DATE" || header == "CMPT_DELIV_DATE") {
                            if (row[header] != null && row[header] != '') {
                                var timestamp = parseInt(row[header].match(/\d+/)[0], 10);
                                var date = new Date(timestamp);
                                var formattedDate = date.toLocaleDateString('tr-TR');
                                $('<td>').text(formattedDate).appendTo(tr);
                            }
                        }
                        else {
                            $('<td>').text(row[header]).appendTo(tr);
                        }
                    });
                    tr.appendTo(tbody);
                });
                tbody.appendTo(exportTable);

                var wb = XLSX.utils.table_to_book(exportTable[0], { sheet: "Sheet1" });
                const ws = wb.Sheets["Sheet1"];
                //Object.keys(ws).forEach(cell => {
                //    const column = cell[0];
                //    const targetColumns = ['P'];
                //    if (targetColumns.includes(column) && ws[cell].t === 'n') {
                //        const numericValue = ws[cell].v / 100;
                //        const formattedValue = new Intl.NumberFormat('tr-TR', {
                //            minimumFractionDigits: 2,
                //            maximumFractionDigits: 2,
                //            useGrouping: true,
                //        }).format(numericValue);

                //        ws[cell].v = formattedValue;
                //     /*   ws[cell].t = 'n';*/
                //    }
                //});

                var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });
                function s2ab(s) {
                    var buf = new ArrayBuffer(s.length);
                    var view = new Uint8Array(buf);
                    for (var i = 0; i < s.length; i++) {
                        view[i] = s.charCodeAt(i) & 0xFF;
                    }
                    return buf;
                }

                var blob = new Blob([s2ab(wbout)], { type: "application/octet-stream" });
                var link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = 'table_export.xlsx';
                link.download = filename;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                //var wb = XLSX.utils.table_to_book(exportTable[0], { sheet: "Sheet1" });
                //const ws = wb.Sheets["Sheet1"];
                //Object.keys(ws).forEach(cell => {
                //    if (ws[cell].t === 'n') { // Check if the cell contains a number
                //        const formattedValue = new Intl.NumberFormat('tr-TR', {
                //            minimumFractionDigits: 2,
                //            maximumFractionDigits: 2,
                //            useGrouping: true // Ensures thousands separators
                //        }).format(ws[cell].v);

                //        ws[cell].v = formattedValue;
                //        ws[cell].t = 's'; // Set the type to string to preserve the formatting
                //    }
                //});

                //var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });
                //function s2ab(s) {
                //    var buf = new ArrayBuffer(s.length);
                //    var view = new Uint8Array(buf);
                //    for (var i = 0; i < s.length; i++) {
                //        view[i] = s.charCodeAt(i) & 0xFF;
                //    }
                //    return buf;
                //}

                //var blob = new Blob([s2ab(wbout)], { type: "application/octet-stream" });
                //var link = document.createElement('a');
                //link.href = URL.createObjectURL(blob);
                //link.download = 'table_export.xlsx';
                //link.download = filename;
                //document.body.appendChild(link);
                //link.click();
                //document.body.removeChild(link);
            }

            function disableElements() {
                $("#download-xlsx")
                    .prop("disabled", true)
                    .addClass("disabled-link");

                $('#freezeOverlay').show();
            }
        });
    </script>
}



